{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import Chromium from \"chrome-aws-lambda\";\nimport { Browser, Page, Viewport } from \"puppeteer-core\";\nimport treeKill from \"tree-kill\";\nimport blockedHostsList from \"./blocked-hosts\";\n\nimport { SessionExpired } from \"./errors\";\nimport {\n  formatDate,\n  getCleanText,\n  getDurationInDays,\n  getHostname,\n  getLocationFromText,\n  statusLog,\n} from \"./utils\";\n\nexport interface Location {\n  city: string | null;\n  province: string | null;\n  country: string | null;\n}\n\ninterface RawProfile {\n  fullName: string | null;\n  title: string | null;\n  location: string | null;\n  photo: string | null;\n  description: string | null;\n  url: string;\n}\n\nexport interface Profile {\n  fullName: string | null;\n  title: string | null;\n  location: Location | null;\n  photo: string | null;\n  description: string | null;\n  url: string;\n}\n\ninterface RawExperience {\n  title: string | null;\n  company: string | null;\n  employmentType: string | null;\n  location: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  description: string | null;\n}\n\nexport interface Experience {\n  title: string | null;\n  company: string | null;\n  employmentType: string | null;\n  location: Location | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  durationInDays: number | null;\n  description: string | null;\n}\n\ninterface RawCertification {\n  name: string | null;\n  issuingOrganization: string | null;\n  issueDate: string | null;\n  expirationDate: string | null;\n}\n\ninterface Certification {\n  name: string | null;\n  issuingOrganization: string | null;\n  issueDate: string | null;\n  expirationDate: string | null;\n}\n\ninterface RawEducation {\n  schoolName: string | null;\n  degreeName: string | null;\n  fieldOfStudy: string | null;\n  startDate: string | null;\n  endDate: string | null;\n}\n\nexport interface Education {\n  schoolName: string | null;\n  degreeName: string | null;\n  fieldOfStudy: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  durationInDays: number | null;\n}\n\ninterface RawVolunteerExperience {\n  title: string | null;\n  company: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  description: string | null;\n}\n\nexport interface VolunteerExperience {\n  title: string | null;\n  company: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  durationInDays: number | null;\n  description: string | null;\n}\n\nexport interface RawOrganizationAccomplishments {\n  name: string | null;\n  position: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  description: string | null;\n}\n\nexport interface OrganizationAccomplishments {\n  name: string | null;\n  position: string | null;\n  startDate: string | Date | null;\n  endDate: string | Date | null;\n  endDateIsPresent: boolean;\n  durationInDays: number | null;\n  description: string | null;\n}\n\nexport interface RawLanguageAccomplishments {\n  language: string | null;\n  proficiency: string | null;\n}\n\nexport interface LanguageAccomplishments {\n  language: string | null;\n  proficiency: string | null;\n}\n\nexport interface RawProjectAccomplishments {\n  name: string | null;\n  description: string | null;\n}\n\nexport interface ProjectAccomplishments {\n  name: string | null;\n  description: string | null;\n}\n\nexport interface Skill {\n  skillName: string | null;\n  endorsementCount: number | null;\n}\n\ninterface ScraperUserDefinedOptions {\n  /**\n   * The LinkedIn `li_at` session cookie value. Get this value by logging in to LinkedIn with the account you want to use for scraping.\n   * Open your browser's Dev Tools and find the cookie with the name `li_at`. Use that value here.\n   *\n   * This script uses a known session cookie of a successful login into LinkedIn, instead of an e-mail and password to set you logged in.\n   * I did this because LinkedIn has security measures by blocking login requests from unknown locations or requiring you to fill in Captcha's upon login.\n   * So, if you run this from a server and try to login with an e-mail address and password, your login could be blocked.\n   * By using a known session, we prevent this from happening and allows you to use this scraper on any server on any location.\n   *\n   * You probably need to get a new session cookie value when the scraper logs show it's not logged in anymore.\n   */\n  sessionCookieValue: string;\n  /**\n   * Set to true if you want to keep the scraper session alive. This results in faster recurring scrapes.\n   * But keeps your memory usage high.\n   *\n   * Default: `false`\n   */\n  keepAlive?: boolean;\n  /**\n   * Set a custom user agent if you like.\n   *\n   * Default: `Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36`\n   */\n  userAgent?: string;\n  /**\n   * Use a custom timeout to set the maximum time you want to wait for the scraper\n   * to do his job.\n   *\n   * Default: `10000` (10 seconds)\n   */\n  timeout?: number;\n  /**\n   * Start the scraper in headless mode, or not.\n   *\n   * Default: `true`\n   */\n  headless?: boolean;\n  /**\n   * puppeteer executable path\n   *\n   * Default: chromium path\n   */\n  executablePath?: string;\n}\n\ninterface ScraperOptions {\n  sessionCookieValue: string;\n  keepAlive: boolean;\n  userAgent: string;\n  timeout: number;\n  headless: boolean;\n  executablePath: string | null;\n  defaultViewport: Required<Viewport>;\n}\n\nasync function autoScroll(page: Page) {\n  await page.evaluate(() => {\n    return new Promise((resolve, reject) => {\n      let totalHeight = 0;\n      const distance = 500;\n      let timer = setInterval(() => {\n        const scrollHeight = document.body.scrollHeight;\n        window.scrollBy(0, distance);\n        totalHeight += distance;\n\n        if (totalHeight >= scrollHeight) {\n          clearInterval(timer);\n          resolve(true);\n        }\n      }, 100);\n    });\n  });\n}\n\nexport class LinkedInProfileScraper {\n  readonly options: ScraperOptions = {\n    sessionCookieValue: \"\",\n    keepAlive: false,\n    timeout: 10000,\n    userAgent:\n      \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\",\n    headless: Chromium.headless,\n    executablePath: null,\n    defaultViewport: Chromium.defaultViewport,\n  };\n\n  private browser: Browser | null = null;\n  private launched: boolean = false;\n\n  constructor(userDefinedOptions: ScraperUserDefinedOptions) {\n    const logSection = \"constructing\";\n    const errorPrefix = \"Error during setup.\";\n\n    if (!userDefinedOptions.sessionCookieValue) {\n      throw new Error(\n        `${errorPrefix} Option \"sessionCookieValue\" is required.`\n      );\n    }\n\n    if (\n      userDefinedOptions.sessionCookieValue &&\n      typeof userDefinedOptions.sessionCookieValue !== \"string\"\n    ) {\n      throw new Error(\n        `${errorPrefix} Option \"sessionCookieValue\" needs to be a string.`\n      );\n    }\n\n    if (\n      userDefinedOptions.userAgent &&\n      typeof userDefinedOptions.userAgent !== \"string\"\n    ) {\n      throw new Error(\n        `${errorPrefix} Option \"userAgent\" needs to be a string.`\n      );\n    }\n\n    if (\n      userDefinedOptions.keepAlive !== undefined &&\n      typeof userDefinedOptions.keepAlive !== \"boolean\"\n    ) {\n      throw new Error(\n        `${errorPrefix} Option \"keepAlive\" needs to be a boolean.`\n      );\n    }\n\n    if (\n      userDefinedOptions.timeout !== undefined &&\n      typeof userDefinedOptions.timeout !== \"number\"\n    ) {\n      throw new Error(`${errorPrefix} Option \"timeout\" needs to be a number.`);\n    }\n\n    if (\n      userDefinedOptions.headless !== undefined &&\n      typeof userDefinedOptions.headless !== \"boolean\"\n    ) {\n      throw new Error(\n        `${errorPrefix} Option \"headless\" needs to be a boolean.`\n      );\n    }\n\n    if (\n      userDefinedOptions.executablePath !== undefined &&\n      typeof userDefinedOptions.executablePath !== \"string\"\n    ) {\n      throw new Error(\n        `${errorPrefix} Option \"executablePath\" needs to be a string.`\n      );\n    }\n\n    this.options = Object.assign(this.options, userDefinedOptions);\n\n    statusLog(logSection, `Using options: ${JSON.stringify(this.options)}`);\n  }\n\n  /**\n   * Method to load Puppeteer in memory so we can re-use the browser instance.\n   */\n  public setup = async () => {\n    const logSection = \"setup\";\n\n    try {\n      if (!this.options.executablePath) {\n        this.options.executablePath = await Chromium.executablePath;\n      }\n      statusLog(\n        logSection,\n        `Launching puppeteer in the ${\n          this.options.headless ? \"background\" : \"foreground\"\n        }...`\n      );\n\n      this.browser = await Chromium.puppeteer.launch({\n        headless: this.options.headless,\n        executablePath: this.options.executablePath,\n        defaultViewport: this.options.defaultViewport,\n        args: [\n          ...(this.options.headless\n            ? \"---single-process\"\n            : \"---start-maximized\"),\n          \"--no-sandbox\",\n          \"--disable-setuid-sandbox\",\n          \"--proxy-server='direct://\",\n          \"--proxy-bypass-list=*\",\n          \"--disable-dev-shm-usage\",\n          \"--disable-accelerated-2d-canvas\",\n          \"--disable-gpu\",\n          \"--disable-features=site-per-process\",\n          \"--enable-features=NetworkService\",\n          \"--allow-running-insecure-content\",\n          \"--enable-automation\",\n          \"--disable-background-timer-throttling\",\n          \"--disable-backgrounding-occluded-windows\",\n          \"--disable-renderer-backgrounding\",\n          \"--disable-web-security\",\n          \"--autoplay-policy=user-gesture-required\",\n          \"--disable-background-networking\",\n          \"--disable-breakpad\",\n          \"--disable-client-side-phishing-detection\",\n          \"--disable-component-update\",\n          \"--disable-default-apps\",\n          \"--disable-domain-reliability\",\n          \"--disable-extensions\",\n          \"--disable-features=AudioServiceOutOfProcess\",\n          \"--disable-hang-monitor\",\n          \"--disable-ipc-flooding-protection\",\n          \"--disable-notifications\",\n          \"--disable-offer-store-unmasked-wallet-cards\",\n          \"--disable-popup-blocking\",\n          \"--disable-print-preview\",\n          \"--disable-prompt-on-repost\",\n          \"--disable-speech-api\",\n          \"--disable-sync\",\n          \"--disk-cache-size=33554432\",\n          \"--hide-scrollbars\",\n          \"--ignore-gpu-blacklist\",\n          \"--metrics-recording-only\",\n          \"--mute-audio\",\n          \"--no-default-browser-check\",\n          \"--no-first-run\",\n          \"--no-pings\",\n          \"--no-zygote\",\n          \"--password-store=basic\",\n          \"--use-gl=swiftshader\",\n          \"--use-mock-keychain\",\n        ],\n        timeout: this.options.timeout,\n      });\n\n      this.launched = true;\n      statusLog(logSection, \"Puppeteer launched!\");\n\n      await this.checkIfLoggedIn();\n\n      statusLog(logSection, \"Done!\");\n    } catch (err) {\n      // Kill Puppeteer\n      await this.close();\n\n      statusLog(logSection, \"An error occurred during setup.\");\n\n      throw err;\n    }\n  };\n\n  public isPuppeteerLoaded = async () => {\n    return this.launched;\n  };\n\n  /**\n   * Create a Puppeteer page with some extra settings to speed up the crawling process.\n   */\n  private createPage = async (): Promise<Page> => {\n    const logSection = \"setup page\";\n\n    if (!this.browser) {\n      throw new Error(\"Browser not set.\");\n    }\n\n    // Important: Do not block \"stylesheet\", makes the crawler not work for LinkedIn\n    const blockedResources = [\n      \"media\",\n      \"font\",\n      \"texttrack\",\n      \"object\",\n      \"beacon\",\n      \"csp_report\",\n      \"imageset\",\n    ]; // not blocking image since we want profile pics\n\n    try {\n      const page = await this.browser.newPage();\n\n      // Use already open page\n      // This makes sure we don't have an extra open tab consuming memory\n      const firstPage = (await this.browser.pages())[0];\n      await firstPage.close();\n\n      // Method to create a faster Page\n      // From: https://github.com/shirshak55/scrapper-tools/blob/master/src/fastPage/index.ts#L113\n      const session = await page.target().createCDPSession();\n      await page.setBypassCSP(true);\n      await session.send(\"Page.enable\");\n      await session.send(\"Page.setWebLifecycleState\", {\n        state: \"active\",\n      });\n\n      statusLog(\n        logSection,\n        `Blocking the following resources: ${blockedResources.join(\", \")}`\n      );\n\n      // A list of hostnames that are trackers\n      // By blocking those requests we can speed up the crawling\n      // This is kinda what a normal adblocker does, but really simple\n      const blockedHosts = this.getBlockedHosts();\n      const blockedResourcesByHost = [\"script\", \"xhr\", \"fetch\", \"document\"];\n\n      statusLog(\n        logSection,\n        `Should block scripts from ${\n          Object.keys(blockedHosts).length\n        } unwanted hosts to speed up the crawling.`\n      );\n\n      // Block loading of resources, like images and css, we dont need that\n      await page.setRequestInterception(true);\n\n      page.on(\"request\", (req) => {\n        if (blockedResources.includes(req.resourceType())) {\n          return req.abort();\n        }\n\n        const hostname = getHostname(req.url());\n\n        // Block all script requests from certain host names\n        if (\n          blockedResourcesByHost.includes(req.resourceType()) &&\n          hostname &&\n          blockedHosts[hostname] === true\n        ) {\n          statusLog(\n            \"blocked script\",\n            `${req.resourceType()}: ${hostname}: ${req.url()}`\n          );\n          return req.abort();\n        }\n\n        return req.continue();\n      });\n\n      await page.setUserAgent(this.options.userAgent);\n\n      await page.setViewport({\n        width: 1200,\n        height: 720,\n      });\n\n      statusLog(\n        logSection,\n        `Setting session cookie using cookie: ${process.env.LINKEDIN_SESSION_COOKIE_VALUE}`\n      );\n\n      await page.setCookie({\n        name: \"li_at\",\n        value: this.options.sessionCookieValue,\n        domain: \".www.linkedin.com\",\n      });\n\n      statusLog(logSection, \"Session cookie set!\");\n\n      statusLog(logSection, \"Done!\");\n\n      return page;\n    } catch (err) {\n      // Kill Puppeteer\n      await this.close();\n\n      statusLog(logSection, \"An error occurred during page setup.\");\n      statusLog(logSection, err.message);\n\n      throw err;\n    }\n  };\n\n  /**\n   * Method to block know hosts that have some kind of tracking.\n   * By blocking those hosts we speed up the crawling.\n   *\n   * More info: http://winhelp2002.mvps.org/hosts.htm\n   */\n  private getBlockedHosts = (): object => {\n    const blockedHostsArray = blockedHostsList.split(\"\\n\");\n\n    let blockedHostsObject = blockedHostsArray.reduce((prev, curr) => {\n      const frags = curr.split(\" \");\n\n      if (frags.length > 1 && frags[0] === \"0.0.0.0\") {\n        prev[frags[1].trim()] = true;\n      }\n\n      return prev;\n    }, {});\n\n    blockedHostsObject = {\n      ...blockedHostsObject,\n      \"static.chartbeat.com\": true,\n      \"scdn.cxense.com\": true,\n      \"api.cxense.com\": true,\n      \"www.googletagmanager.com\": true,\n      \"connect.facebook.net\": true,\n      \"platform.twitter.com\": true,\n      \"tags.tiqcdn.com\": true,\n      \"dev.visualwebsiteoptimizer.com\": true,\n      \"smartlock.google.com\": true,\n      \"cdn.embedly.com\": true,\n      \"www.pagespeed-mod.com\": true,\n      \"ssl.google-analytics.com\": true,\n      \"radar.cedexis.com\": true,\n      \"sb.scorecardresearch.com\": true,\n    };\n\n    return blockedHostsObject;\n  };\n\n  /**\n   * Method to complete kill any Puppeteer process still active.\n   * Freeing up memory.\n   */\n  public close = (page?: Page): Promise<void> => {\n    return new Promise(async (resolve, reject) => {\n      const loggerPrefix = \"close\";\n      this.launched = false;\n      if (page) {\n        try {\n          statusLog(loggerPrefix, \"Closing page...\");\n          await page.close();\n          statusLog(loggerPrefix, \"Closed page!\");\n        } catch (err) {\n          reject(err);\n        }\n      }\n\n      if (this.browser) {\n        try {\n          statusLog(loggerPrefix, \"Closing browser...\");\n          await this.browser.close();\n          statusLog(loggerPrefix, \"Closed browser!\");\n\n          const browserProcessPid = this.browser.process()?.pid;\n\n          // Completely kill the browser process to prevent zombie processes\n          // https://docs.browserless.io/blog/2019/03/13/more-observations.html#tip-2-when-you-re-done-kill-it-with-fire\n          if (browserProcessPid) {\n            statusLog(\n              loggerPrefix,\n              `Killing browser process pid: ${browserProcessPid}...`\n            );\n\n            treeKill(browserProcessPid, \"SIGKILL\", (err) => {\n              if (err) {\n                return reject(\n                  `Failed to kill browser process pid: ${browserProcessPid}`\n                );\n              }\n\n              statusLog(\n                loggerPrefix,\n                `Killed browser pid: ${browserProcessPid} Closed browser.`\n              );\n              resolve();\n            });\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }\n\n      return resolve();\n    });\n  };\n\n  /**\n   * Simple method to check if the session is still active.\n   */\n  public checkIfLoggedIn = async () => {\n    const logSection = \"checkIfLoggedIn\";\n\n    const page = await this.createPage();\n\n    statusLog(logSection, \"Checking if we are still logged in...\");\n\n    // Go to the login page of LinkedIn\n    // If we do not get redirected and stay on /login, we are logged out\n    // If we get redirect to /feed, we are logged in\n    await page.goto(\"https://www.linkedin.com/login\", {\n      waitUntil: \"networkidle2\",\n      timeout: this.options.timeout,\n    });\n\n    const url = page.url();\n\n    const isLoggedIn = !url.endsWith(\"/login\");\n\n    await page.close();\n\n    if (isLoggedIn) {\n      statusLog(logSection, \"All good. We are still logged in.\");\n    } else {\n      const errorMessage =\n        'Bad news, we are not logged in! Your session seems to be expired. Use your browser to login again with your LinkedIn credentials and extract the \"li_at\" cookie value for the \"sessionCookieValue\" option.';\n      statusLog(logSection, errorMessage);\n      throw new SessionExpired(errorMessage);\n    }\n  };\n\n  /**\n   * Method to scrape a user profile.\n   */\n  public run = async (profileUrl: string) => {\n    const logSection = \"run\";\n\n    const scraperSessionId = new Date().getTime();\n\n    if (!this.browser) {\n      throw new Error(\"Browser is not set. Please run the setup method first.\");\n    }\n\n    if (!profileUrl) {\n      throw new Error(\"No profileUrl given.\");\n    }\n\n    if (!profileUrl.includes(\"linkedin.com/\")) {\n      throw new Error(\"The given URL to scrape is not a linkedin.com url.\");\n    }\n\n    try {\n      // Each run has it's own page\n      const page = await this.createPage();\n\n      statusLog(\n        logSection,\n        `Navigating to LinkedIn profile: ${profileUrl}`,\n        scraperSessionId\n      );\n\n      await page.goto(profileUrl, {\n        // Use \"networkidl2\" here and not \"domcontentloaded\".\n        // As with \"domcontentloaded\" some elements might not be loaded correctly, resulting in missing data.\n        waitUntil: \"networkidle2\",\n        timeout: this.options.timeout,\n      });\n\n      statusLog(logSection, \"LinkedIn profile page loaded!\", scraperSessionId);\n\n      statusLog(\n        logSection,\n        \"Getting all the LinkedIn profile data by scrolling the page to the bottom, so all the data gets loaded into the page...\",\n        scraperSessionId\n      );\n\n      await autoScroll(page);\n\n      statusLog(logSection, \"Parsing data...\", scraperSessionId);\n\n      // Only click the expanding buttons when they exist\n      const expandButtonsSelectors = [\n        \".pv-profile-section.pv-about-section .lt-line-clamp__more\", // About\n        \"#experience-section .inline-show-more-text__button.link\", // Experience\n        '#experience-section [aria-expanded=\"false\"]',\n        '#certifications-section [aria-expanded=\"false\"]', // Certifications,\n        \".pv-profile-section.education-section button.pv-profile-section__see-more-inline\", // Education\n        // '.pv-profile-section__card-action-bar.pv-skills-section__additional-skills.artdeco-container-card-action-bar.artdeco-button.artdeco-button--tertiary.artdeco-button--3.artdeco-button--fluid.artdeco-button--muted', // Skills,\n        '[aria-controls=\"skill-categories-expanded\"]', // Skills, shorter query\n      ];\n\n      const seeMoreButtonsSelectors = [\n        '.pv-entity__description .lt-line-clamp__line.lt-line-clamp__line--last .lt-line-clamp__more[href=\"#\"]',\n        \".pv-profile-section__see-more-inline\",\n        \".inline-show-more-text__button\",\n        \".pv-profile-section__see-more-inline.pv-profile-section__text-truncate-toggle.artdeco-button.artdeco-button--tertiary.artdeco-button--muted\",\n        \".pv-entity__paging button.pv-profile-section__see-more-inline\",\n        '#experience-section [aria-expanded=\"false\"]',\n      ];\n\n      statusLog(\n        logSection,\n        'Expanding all sections by clicking their \"See more\" buttons',\n        scraperSessionId\n      );\n\n      for (const buttonSelector of expandButtonsSelectors) {\n        try {\n          if ((await page.$(buttonSelector)) != null) {\n            statusLog(\n              logSection,\n              `Clicking button ${buttonSelector}`,\n              scraperSessionId\n            );\n            await page.click(buttonSelector);\n            await page.waitFor(100);\n\n            // since certifications sort of paginate expands\n            if (buttonSelector.startsWith(\"#certifications-section\")) {\n              while ((await page.$(buttonSelector)) != null) {\n                await page.click(buttonSelector);\n                await page.waitFor(100);\n              }\n            }\n          }\n        } catch (err) {\n          statusLog(\n            logSection,\n            `Could not find or click expand button selector \"${buttonSelector}\". So we skip that one.`,\n            scraperSessionId\n          );\n        }\n      }\n\n      // To give a little room to let data appear. Setting this to 0 might result in \"Node is detached from document\" errors\n      await page.waitFor(200);\n\n      statusLog(\n        logSection,\n        'Expanding all descriptions by clicking their \"See more\" buttons',\n        scraperSessionId\n      );\n\n      for (const seeMoreButtonSelector of seeMoreButtonsSelectors) {\n        const buttons = await page.$$(seeMoreButtonSelector);\n\n        for (const button of buttons) {\n          if (button) {\n            try {\n              statusLog(\n                logSection,\n                `Clicking button ${seeMoreButtonSelector}`,\n                scraperSessionId\n              );\n              await button.click();\n              await page.waitFor(100);\n            } catch (err) {\n              statusLog(\n                logSection,\n                `Could not find or click see more button selector \"${button}\". So we skip that one.`,\n                scraperSessionId\n              );\n            }\n          }\n        }\n      }\n\n      await page.waitFor(200);\n\n      statusLog(logSection, \"Parsing profile data...\", scraperSessionId);\n\n      const rawUserProfileData: RawProfile = await page.evaluate(() => {\n        const profileSection = document.querySelector(\".pv-top-card\");\n\n        const url = window.location.href;\n\n        const fullNameElement = profileSection?.querySelector(\n          \".text-heading-xlarge.inline\"\n        );\n        const fullName = fullNameElement?.textContent || null;\n\n        const titleElement = profileSection?.querySelector(\n          \".text-body-medium.break-words\"\n        );\n        const title = titleElement?.textContent || null;\n\n        const locationElement = profileSection?.querySelector(\n          \".text-body-small.inline.t-black--light.break-words\"\n        );\n        const location = locationElement?.textContent || null;\n\n        const photoElement =\n          profileSection?.querySelector(\n            \".pv-top-card-profile-picture__image.pv-top-card-profile-picture__image--show\"\n          ) || profileSection?.querySelector(\".profile-photo-edit__preview\");\n        const photo = photoElement?.getAttribute(\"src\") || null;\n\n        const descriptionElement = document.querySelector(\".pv-about-section\"); // Is outside \"profileSection\"\n        const description = descriptionElement?.textContent || null;\n\n        return {\n          fullName,\n          title,\n          location,\n          photo,\n          description,\n          url,\n        } as RawProfile;\n      });\n\n      // Convert the raw data to clean data using our utils\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\n      const userProfile: Profile = {\n        ...rawUserProfileData,\n        fullName: getCleanText(rawUserProfileData.fullName),\n        title: getCleanText(rawUserProfileData.title),\n        location: rawUserProfileData.location\n          ? getLocationFromText(rawUserProfileData.location)\n          : null,\n        description: getCleanText(rawUserProfileData.description),\n      };\n\n      statusLog(\n        logSection,\n        `Got user profile data: ${JSON.stringify(userProfile)}`,\n        scraperSessionId\n      );\n\n      statusLog(logSection, `Parsing experiences data...`, scraperSessionId);\n\n      const rawExperiencesData: RawExperience[] = await page.$$eval(\n        \"#experience-section ul > .ember-view, #experience-section .pv-entity__position-group-role-item-fading-timeline, #experience-section .pv-entity__position-group-role-item\",\n        (nodes) => {\n          let data: RawExperience[] = [];\n          let currentCompanySummary: object = {};\n\n          // Using a for loop so we can use await inside of it\n          for (const node of nodes) {\n            let title,\n              employmentType,\n              company,\n              description,\n              startDate,\n              endDate,\n              dateRangeText,\n              endDateIsPresent,\n              location;\n            if (\n              node.querySelector(\".pv-entity__company-summary-info\") != null\n            ) {\n              const companyElement = node.querySelector(\n                \".pv-entity__company-summary-info span:nth-child(2)\"\n              );\n              currentCompanySummary[\"company_name\"] =\n                companyElement?.textContent || null;\n\n              const descriptionElement = node.querySelector(\n                \".pv-entity__description\"\n              );\n              currentCompanySummary[\"\"] =\n                descriptionElement?.textContent || null;\n\n              continue;\n            }\n            if (\n              node.querySelector(\n                '[data-control-name=\"background_details_company\"]'\n              ) != null\n            ) {\n              currentCompanySummary = {};\n            }\n            if (Object.keys(currentCompanySummary).length !== 0) {\n              const titleElement = node.querySelector(\"h3 span:nth-child(2)\");\n              title = titleElement?.textContent || null;\n\n              const employmentTypeElement = node.querySelector(\"h4\");\n              employmentType = employmentTypeElement?.textContent || null;\n\n              company = currentCompanySummary[\"company_name\"];\n            } else {\n              const titleElement = node.querySelector(\"h3\");\n              title = titleElement?.textContent || null;\n\n              const employmentTypeElement = node.querySelector(\n                \"span.pv-entity__secondary-title\"\n              );\n              employmentType = employmentTypeElement?.textContent || null;\n\n              const companyElement = node.querySelector(\n                \".pv-entity__secondary-title\"\n              );\n              const companyElementClean =\n                companyElement && companyElement?.querySelector(\"span\")\n                  ? companyElement?.removeChild(\n                      companyElement.querySelector(\"span\") as Node\n                    ) && companyElement\n                  : companyElement || null;\n              company = companyElementClean?.textContent || null;\n            }\n\n            const descriptionElement = node.querySelector(\n              \".pv-entity__description\"\n            );\n            description = descriptionElement?.textContent || null;\n\n            const dateRangeElement = node.querySelector(\n              \".pv-entity__date-range span:nth-child(2)\"\n            );\n            dateRangeText = dateRangeElement?.textContent || null;\n\n            const startDatePart = dateRangeText?.split(\"–\")[0] || null;\n            startDate = startDatePart?.trim() || null;\n\n            const endDatePart = dateRangeText?.split(\"–\")[1] || null;\n            endDateIsPresent =\n              endDatePart?.trim().toLowerCase() === \"present\" || false;\n            endDate =\n              endDatePart && !endDateIsPresent ? endDatePart.trim() : \"Present\";\n\n            const locationElement = node.querySelector(\n              \".pv-entity__location span:nth-child(2)\"\n            );\n            location = locationElement?.textContent || null;\n\n            data.push({\n              title,\n              company,\n              employmentType,\n              location,\n              startDate,\n              endDate,\n              endDateIsPresent,\n              description,\n            });\n          }\n\n          return data;\n        }\n      );\n\n      // Convert the raw data to clean data using our utils\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\n      const experiences: Experience[] = rawExperiencesData.map(\n        (rawExperience) => {\n          const startDate = formatDate(rawExperience.startDate);\n          const endDate = formatDate(rawExperience.endDate) || null;\n          const endDateIsPresent = rawExperience.endDateIsPresent;\n\n          const durationInDaysWithEndDate =\n            startDate && endDate && !endDateIsPresent\n              ? getDurationInDays(startDate, endDate)\n              : null;\n          const durationInDaysForPresentDate =\n            endDateIsPresent && startDate\n              ? getDurationInDays(startDate, new Date())\n              : null;\n          const durationInDays = endDateIsPresent\n            ? durationInDaysForPresentDate\n            : durationInDaysWithEndDate;\n\n          let cleanedEmploymentType = getCleanText(\n            rawExperience.employmentType\n          );\n          if (\n            cleanedEmploymentType &&\n            ![\n              \"Full-time\",\n              \"Part-time\",\n              \"Self-employed\",\n              \"Freelance\",\n              \"Contract\",\n              \"Seasonal\",\n              \"Internship\",\n              \"Apprenticeship\",\n            ].includes(cleanedEmploymentType)\n          ) {\n            cleanedEmploymentType = null;\n          }\n          return {\n            ...rawExperience,\n            title: getCleanText(rawExperience.title),\n            company: getCleanText(rawExperience.company),\n            employmentType: cleanedEmploymentType,\n            location: rawExperience?.location\n              ? getLocationFromText(rawExperience.location)\n              : null,\n            startDate,\n            endDate,\n            endDateIsPresent,\n            durationInDays,\n            description: getCleanText(rawExperience.description),\n          };\n        }\n      );\n\n      statusLog(\n        logSection,\n        `Got experiences data: ${JSON.stringify(experiences)}`,\n        scraperSessionId\n      );\n\n      statusLog(logSection, `Parsing education data...`, scraperSessionId);\n\n      const rawCertificationData: RawCertification[] = await page.$$eval(\n        \"#certifications-section ul > .ember-view\",\n        (nodes) => {\n          // Note: the $$eval context is the browser context.\n          // So custom methods you define in this file are not available within this $$eval.\n          let data: RawCertification[] = [];\n          for (const node of nodes) {\n            const nameElement = node.querySelector(\"h3\");\n            const name = nameElement?.textContent || null;\n\n            const issuingOrganizationElement = node.querySelector(\n              \"p span:nth-child(2)\"\n            );\n            const issuingOrganization =\n              issuingOrganizationElement?.textContent || null;\n\n            const expirationDateElement = node.querySelector(\n              \".pv-entity__bullet-item-v2\"\n            );\n            const expirationDate = expirationDateElement?.textContent || null;\n\n            let issueDate;\n            if (expirationDate) {\n              const issueDateElement = node.querySelectorAll(\n                \"p span:not(.pv-entity__bullet-item-v2)\"\n              )[3];\n              issueDate =\n                issueDateElement?.textContent?.replace(expirationDate, \"\") ||\n                null;\n            } else {\n              issueDate = null;\n            }\n\n            data.push({\n              name,\n              issuingOrganization,\n              issueDate,\n              expirationDate,\n            });\n          }\n\n          return data;\n        }\n      );\n\n      // Convert the raw data to clean data using our utils\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\n      const certifications: Certification[] = rawCertificationData.map(\n        (rawCertification) => {\n          return {\n            ...rawCertification,\n            name: getCleanText(rawCertification.name),\n            issuingOrganization: getCleanText(\n              rawCertification.issuingOrganization\n            ),\n            issueDate: getCleanText(rawCertification.issueDate),\n            expirationDate: getCleanText(rawCertification.expirationDate),\n          };\n        }\n      );\n\n      statusLog(\n        logSection,\n        `Got certification data: ${JSON.stringify(certifications)}`,\n        scraperSessionId\n      );\n\n      statusLog(logSection, `Parsing education data...`, scraperSessionId);\n\n      const rawEducationData: RawEducation[] = await page.$$eval(\n        \"#education-section ul > .ember-view\",\n        (nodes) => {\n          // Note: the $$eval context is the browser context.\n          // So custom methods you define in this file are not available within this $$eval.\n          let data: RawEducation[] = [];\n          for (const node of nodes) {\n            const schoolNameElement = node.querySelector(\n              \"h3.pv-entity__school-name\"\n            );\n            const schoolName = schoolNameElement?.textContent || null;\n\n            const degreeNameElement = node.querySelector(\n              \".pv-entity__degree-name .pv-entity__comma-item\"\n            );\n            const degreeName = degreeNameElement?.textContent || null;\n\n            const fieldOfStudyElement = node.querySelector(\n              \".pv-entity__fos .pv-entity__comma-item\"\n            );\n            const fieldOfStudy = fieldOfStudyElement?.textContent || null;\n\n            // const gradeElement = node.querySelector('.pv-entity__grade .pv-entity__comma-item');\n            // const grade = (gradeElement && gradeElement.textContent) ? window.getCleanText(fieldOfStudyElement.textContent) : null;\n\n            const dateRangeElement = node.querySelectorAll(\n              \".pv-entity__dates time\"\n            );\n\n            const startDatePart =\n              (dateRangeElement && dateRangeElement[0]?.textContent) || null;\n            const startDate = startDatePart || null;\n\n            const endDatePart =\n              (dateRangeElement && dateRangeElement[1]?.textContent) || null;\n            const endDate = endDatePart || null;\n\n            data.push({\n              schoolName,\n              degreeName,\n              fieldOfStudy,\n              startDate,\n              endDate,\n            });\n          }\n\n          return data;\n        }\n      );\n\n      // Convert the raw data to clean data using our utils\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\n      const education: Education[] = rawEducationData.map((rawEducation) => {\n        const startDate = formatDate(rawEducation.startDate);\n        const endDate = formatDate(rawEducation.endDate);\n\n        return {\n          ...rawEducation,\n          schoolName: getCleanText(rawEducation.schoolName),\n          degreeName: getCleanText(rawEducation.degreeName),\n          fieldOfStudy: getCleanText(rawEducation.fieldOfStudy),\n          startDate,\n          endDate,\n          durationInDays: getDurationInDays(startDate, endDate),\n        };\n      });\n\n      statusLog(\n        logSection,\n        `Got education data: ${JSON.stringify(education)}`,\n        scraperSessionId\n      );\n\n      statusLog(\n        logSection,\n        `Parsing volunteer experience data...`,\n        scraperSessionId\n      );\n\n      const rawVolunteerExperiences: RawVolunteerExperience[] =\n        await page.$$eval(\n          \".pv-profile-section.volunteering-section ul > li.ember-view\",\n          (nodes) => {\n            // Note: the $$eval context is the browser context.\n            // So custom methods you define in this file are not available within this $$eval.\n            let data: RawVolunteerExperience[] = [];\n            for (const node of nodes) {\n              const titleElement = node.querySelector(\n                \".pv-entity__summary-info h3\"\n              );\n              const title = titleElement?.textContent || null;\n\n              const companyElement = node.querySelector(\n                \".pv-entity__summary-info span.pv-entity__secondary-title\"\n              );\n              const company = companyElement?.textContent || null;\n\n              const dateRangeElement = node.querySelector(\n                \".pv-entity__date-range span:nth-child(2)\"\n              );\n              const dateRangeText = dateRangeElement?.textContent || null;\n              const startDatePart = dateRangeText?.split(\"–\")[0] || null;\n              const startDate = startDatePart?.trim() || null;\n\n              const endDatePart = dateRangeText?.split(\"–\")[1] || null;\n              const endDateIsPresent =\n                endDatePart?.trim().toLowerCase() === \"present\" || false;\n              const endDate =\n                endDatePart && !endDateIsPresent\n                  ? endDatePart.trim()\n                  : \"Present\";\n\n              const descriptionElement = node.querySelector(\n                \".pv-entity__description\"\n              );\n              const description = descriptionElement?.textContent || null;\n\n              data.push({\n                title,\n                company,\n                startDate,\n                endDate,\n                endDateIsPresent,\n                description,\n              });\n            }\n\n            return data;\n          }\n        );\n\n      // Convert the raw data to clean data using our utils\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\n      const volunteerExperiences: VolunteerExperience[] =\n        rawVolunteerExperiences.map((rawVolunteerExperience) => {\n          const startDate = formatDate(rawVolunteerExperience.startDate);\n          const endDate = formatDate(rawVolunteerExperience.endDate);\n\n          return {\n            ...rawVolunteerExperience,\n            title: getCleanText(rawVolunteerExperience.title),\n            company: getCleanText(rawVolunteerExperience.company),\n            description: getCleanText(rawVolunteerExperience.description),\n            startDate,\n            endDate,\n            durationInDays: getDurationInDays(startDate, endDate),\n          };\n        });\n\n      statusLog(\n        logSection,\n        `Got volunteer experience data: ${JSON.stringify(\n          volunteerExperiences\n        )}`,\n        scraperSessionId\n      );\n\n      statusLog(logSection, `Parsing skills data...`, scraperSessionId);\n\n      const skills: Skill[] = await page.$$eval(\n        \".pv-skill-categories-section ol > .ember-view\",\n        (nodes) => {\n          // Note: the $$eval context is the browser context.\n          // So custom methods you define in this file are not available within this $$eval.\n\n          return nodes.map((node) => {\n            const skillName = node.querySelector(\n              \".pv-skill-category-entity__name-text\"\n            );\n            const endorsementCount = node.querySelector(\n              \".pv-skill-category-entity__endorsement-count\"\n            );\n\n            return {\n              skillName: skillName ? skillName.textContent?.trim() : null,\n              endorsementCount: endorsementCount\n                ? parseInt(endorsementCount.textContent?.trim() || \"0\")\n                : 0,\n            } as Skill;\n          }) as Skill[];\n        }\n      );\n\n      statusLog(\n        logSection,\n        `Got skills data: ${JSON.stringify(skills)}`,\n        scraperSessionId\n      );\n\n      statusLog(\n        logSection,\n        `Parsing organization accomplishments data...`,\n        scraperSessionId\n      );\n\n      const orgAccButton =\n        'button[aria-label=\"Expand organizations section\"][aria-expanded=\"false\"]';\n\n      if (await page.$(orgAccButton)) {\n        await page.click(orgAccButton);\n        await page.waitFor(100);\n      }\n\n      const rawOrganizationAccomplishments: RawOrganizationAccomplishments[] =\n        await page.$$eval(\n          \".pv-profile-section.pv-accomplishments-block.organizations ul > li.ember-view\",\n          (nodes) => {\n            const data: RawOrganizationAccomplishments[] = [];\n\n            for (const node of nodes) {\n              const nameElement = node.querySelector(\n                \".pv-accomplishment-entity__title\"\n              );\n              const name = nameElement?.textContent || null;\n\n              const positionElement = node.querySelector(\n                \".pv-accomplishment-entity__position\"\n              );\n              const position = positionElement?.textContent || null;\n\n              const dateRangeElement = node.querySelector(\n                \".pv-accomplishment-entity__date\"\n              );\n              const dateRange =\n                dateRangeElement?.textContent?.replace(/\\s*\\n\\s*/gm, \"\") ||\n                null;\n\n              const startDate = dateRange?.split(/-|–/)?.[0]?.trim() || null;\n              const endDate = dateRange?.split(/-|–/)?.[1]?.trim() || null;\n\n              const endDateIsPresent =\n                endDate?.toLowerCase() === \"present\" || false;\n\n              const descriptionElement = node.querySelector(\n                \".pv-accomplishment-entity__description\"\n              );\n              const description = descriptionElement?.textContent || null;\n\n              data.push({\n                name: name,\n                position: position,\n                startDate: startDate,\n                endDate: endDate,\n                endDateIsPresent: endDateIsPresent,\n                description: description,\n              });\n            }\n\n            return data;\n          }\n        );\n\n      const organizationAccomplishments: OrganizationAccomplishments[] =\n        rawOrganizationAccomplishments.map((rawOrganizationAccomplishment) => {\n          const startDate = formatDate(\n            getCleanText(rawOrganizationAccomplishment.startDate)\n          );\n          const endDate = formatDate(\n            getCleanText(rawOrganizationAccomplishment.endDate)\n          );\n\n          return {\n            ...rawOrganizationAccomplishment,\n            name: getCleanText(rawOrganizationAccomplishment.name),\n            position: getCleanText(rawOrganizationAccomplishment.position),\n            description: getCleanText(\n              rawOrganizationAccomplishment.description\n            ),\n            startDate: startDate,\n            endDate: endDate,\n            durationInDays: getDurationInDays(startDate, endDate),\n          };\n        });\n\n      statusLog(\n        logSection,\n        `Parsing language accomplishments data...`,\n        scraperSessionId\n      );\n\n      const langAccButton =\n        'button[aria-label=\"Expand languages section\"][aria-expanded=\"false\"]';\n      if (await page.$(langAccButton)) {\n        await page.click(langAccButton);\n        await page.waitFor(100);\n      }\n\n      const rawLanguageAccomplishments: RawLanguageAccomplishments[] =\n        await page.$$eval(\n          \".pv-profile-section.pv-accomplishments-block.languages ul > li.ember-view\",\n          (nodes) => {\n            const data: RawLanguageAccomplishments[] = [];\n\n            for (const node of nodes) {\n              const languageElement = node.querySelector(\n                \".pv-accomplishment-entity__title\"\n              );\n              const language = languageElement?.textContent || null;\n\n              const proficiencyElement = node.querySelector(\n                \".pv-accomplishment-entity__proficiency\"\n              );\n              const proficiency = proficiencyElement?.textContent || null;\n\n              data.push({\n                language: language,\n                proficiency: proficiency,\n              });\n            }\n\n            return data;\n          }\n        );\n\n      const languageAccomplishments: LanguageAccomplishments[] =\n        rawLanguageAccomplishments.map((languageAccomplishment) => {\n          return {\n            ...languageAccomplishment,\n            language: getCleanText(languageAccomplishment.language),\n            proficiency: getCleanText(languageAccomplishment.proficiency),\n          };\n        });\n\n      statusLog(\n        logSection,\n        `Parsing project accomplishments data...`,\n        scraperSessionId\n      );\n\n      const projAccButton =\n        'button[aria-label=\"Expand projects section\"][aria-expanded=\"false\"]';\n      if (await page.$(projAccButton)) {\n        await page.click(projAccButton);\n        await page.waitFor(100);\n      }\n\n      const rawProjectAccomplishments: RawProjectAccomplishments[] =\n        await page.$$eval(\n          \".pv-profile-section.pv-accomplishments-block.projects ul > li.ember-view\",\n          (nodes) => {\n            const data: RawProjectAccomplishments[] = [];\n\n            for (const node of nodes) {\n              const nameElement = node.querySelector(\n                \".pv-accomplishment-entity__title\"\n              );\n              const name = nameElement?.textContent || null;\n\n              const descriptionElement = node.querySelector(\n                \".pv-accomplishment-entity__description\"\n              );\n              const description = descriptionElement?.textContent || null;\n\n              data.push({\n                name: name,\n                description: description,\n              });\n            }\n\n            return data;\n          }\n        );\n\n      const projectAccomplishments: ProjectAccomplishments[] =\n        rawProjectAccomplishments.map((projectAccomplishment) => {\n          return {\n            ...projectAccomplishment,\n            name: getCleanText(projectAccomplishment.name),\n            description: getCleanText(projectAccomplishment.description),\n          };\n        });\n\n      statusLog(\n        logSection,\n        `Done! Returned profile details for: ${profileUrl}`,\n        scraperSessionId\n      );\n\n      if (!this.options.keepAlive) {\n        statusLog(logSection, \"Not keeping the session alive.\");\n\n        await this.close(page);\n\n        statusLog(logSection, \"Done. Puppeteer is closed.\");\n      } else {\n        statusLog(logSection, \"Done. Puppeteer is being kept alive in memory.\");\n\n        // Only close the current page, we do not need it anymore\n        await page.close();\n      }\n\n      return {\n        userProfile,\n        experiences,\n        certifications,\n        education,\n        volunteerExperiences,\n        skills,\n        organizationAccomplishments,\n        languageAccomplishments,\n        projectAccomplishments,\n      };\n    } catch (err) {\n      // Kill Puppeteer\n      await this.close();\n\n      statusLog(logSection, \"An error occurred during a run.\");\n\n      // Throw the error up, allowing the user to handle this error himself.\n      throw err;\n    }\n  };\n}\n"]}