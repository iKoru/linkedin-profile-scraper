{"version":3,"file":"index.js","sourceRoot":"/","sources":["index.ts"],"names":[],"mappings":"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","sourcesContent":["import { Browser, Page, Viewport } from \"puppeteer-core\";\nimport treeKill from \"tree-kill\";\nimport blockedHostsList from \"./blocked-hosts\";\nimport chromium from \"@sparticuz/chromium\";\nimport puppeteer from \"puppeteer-core\";\n\nimport { SessionExpired } from \"./errors\";\nimport {\n  formatDate,\n  getCleanText,\n  getDurationInDays,\n  getHostname,\n  getLocationFromText,\n  statusLog,\n} from \"./utils\";\n\nexport interface Location {\n  city: string | null;\n  province: string | null;\n  country: string | null;\n}\n\ninterface RawProfile {\n  fullName: string | null;\n  title: string | null;\n  location: string | null;\n  photo: string | null;\n  description: string | null;\n  url: string;\n}\n\nexport interface Profile {\n  fullName: string | null;\n  title: string | null;\n  location: Location | null;\n  photo: string | null;\n  description: string | null;\n  url: string;\n}\n\ninterface RawExperience {\n  title: string | null;\n  company: string | null;\n  employmentType: string | null;\n  location: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  description: string | null;\n}\n\nexport interface Experience {\n  title: string | null;\n  company: string | null;\n  employmentType: string | null;\n  location: Location | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  durationInDays: number | null;\n  description: string | null;\n}\n\ninterface RawCertification {\n  name: string | null;\n  issuingOrganization: string | null;\n  issueDate: string | null;\n  expirationDate: string | null;\n}\n\nexport interface Certification {\n  name: string | null;\n  issuingOrganization: string | null;\n  issueDate: string | null;\n  expirationDate: string | null;\n}\n\nexport interface Award {\n  name: string | null;\n  issuingOrganization: string | null;\n  issueDate: string | null;\n  description: string | null;\n}\n\ninterface RawEducation {\n  schoolName: string | null;\n  degreeName: string | null;\n  fieldOfStudy: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  description: string | null;\n}\n\nexport interface Education {\n  schoolName: string | null;\n  degreeName: string | null;\n  fieldOfStudy: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  durationInDays: number | null;\n  description: string | null;\n}\n\n// interface RawVolunteerExperience {\n//   title: string | null;\n//   company: string | null;\n//   startDate: string | null;\n//   endDate: string | null;\n//   endDateIsPresent: boolean;\n//   description: string | null;\n// }\n\nexport interface VolunteerExperience {\n  title: string | null;\n  company: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  durationInDays: number | null;\n  description: string | null;\n}\n\n// interface RawOrganizationAccomplishments {\n//   name: string | null;\n//   position: string | null;\n//   startDate: string | null;\n//   endDate: string | null;\n//   endDateIsPresent: boolean;\n//   description: string | null;\n// }\n\nexport interface OrganizationAccomplishments {\n  name: string | null;\n  position: string | null;\n  startDate: string | Date | null;\n  endDate: string | Date | null;\n  endDateIsPresent: boolean;\n  durationInDays: number | null;\n  description: string | null;\n}\n\ninterface RawLanguageAccomplishments {\n  language: string | null;\n  proficiency: string | null;\n}\n\nexport interface LanguageAccomplishments {\n  language: string | null;\n  proficiency: string | null;\n}\n\ninterface RawProjectAccomplishments {\n  name: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  description: string | null;\n}\n\nexport interface ProjectAccomplishments {\n  name: string | null;\n  startDate: string | null;\n  endDate: string | null;\n  endDateIsPresent: boolean;\n  description: string | null;\n}\n\nexport interface Skill {\n  skillName: string | null;\n  endorsementCount: number | null;\n}\n\ninterface ScraperUserDefinedOptions {\n  /**\n   * The LinkedIn `li_at` session cookie value. Get this value by logging in to LinkedIn with the account you want to use for scraping.\n   * Open your browser's Dev Tools and find the cookie with the name `li_at`. Use that value here.\n   *\n   * This script uses a known session cookie of a successful login into LinkedIn, instead of an e-mail and password to set you logged in.\n   * I did this because LinkedIn has security measures by blocking login requests from unknown locations or requiring you to fill in Captcha's upon login.\n   * So, if you run this from a server and try to login with an e-mail address and password, your login could be blocked.\n   * By using a known session, we prevent this from happening and allows you to use this scraper on any server on any location.\n   *\n   * You probably need to get a new session cookie value when the scraper logs show it's not logged in anymore.\n   */\n  sessionCookieValue: string;\n  /**\n   * Set to true if you want to keep the scraper session alive. This results in faster recurring scrapes.\n   * But keeps your memory usage high.\n   *\n   * Default: `false`\n   */\n  keepAlive?: boolean;\n  /**\n   * Set a custom user agent if you like.\n   *\n   * Default: `Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36`\n   */\n  userAgent?: string;\n  /**\n   * Use a custom timeout to set the maximum time you want to wait for the scraper\n   * to do his job.\n   *\n   * Default: `10000` (10 seconds)\n   */\n  timeout?: number;\n  /**\n   * Start the scraper in headless mode, or not.\n   *\n   * Default: `true`\n   */\n  headless?: boolean;\n  /**\n   * puppeteer executable path\n   *\n   * Default: chromium path\n   */\n  executablePath?: string;\n  /**\n   * whether treekill when closing\n   *\n   * Default: `true`\n   */\n  treeKill?: boolean;\n}\n\ninterface ScraperOptions {\n  sessionCookieValue: string;\n  keepAlive: boolean;\n  userAgent: string;\n  timeout: number;\n  headless: boolean;\n  executablePath: string | null;\n  defaultViewport: Required<Viewport>;\n  treeKill: boolean;\n}\n\nasync function autoScroll(page: Page) {\n  await page.evaluate(() => {\n    return new Promise((resolve, reject) => {\n      let totalHeight = 0;\n      const distance = 500;\n      let timer = setInterval(() => {\n        const scrollHeight = document.body.scrollHeight;\n        window.scrollBy(0, distance);\n        totalHeight += distance;\n\n        if (totalHeight >= scrollHeight) {\n          clearInterval(timer);\n          resolve(true);\n        }\n      }, 100);\n    });\n  });\n}\n\nexport class LinkedInProfileScraper {\n  readonly options: ScraperOptions = {\n    sessionCookieValue: \"\",\n    keepAlive: false,\n    timeout: 10000,\n    userAgent:\n      \"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/69.0.3497.100 Safari/537.36\",\n    headless: chromium.headless,\n    executablePath: null,\n    defaultViewport: chromium.defaultViewport,\n    treeKill: true,\n  };\n\n  private browser: Browser | null = null;\n  private launched: boolean = false;\n\n  constructor(userDefinedOptions: ScraperUserDefinedOptions) {\n    const errorPrefix = \"Error during setup.\";\n\n    if (!userDefinedOptions.sessionCookieValue) {\n      throw new Error(\n        `${errorPrefix} Option \"sessionCookieValue\" is required.`\n      );\n    }\n\n    if (\n      userDefinedOptions.sessionCookieValue &&\n      typeof userDefinedOptions.sessionCookieValue !== \"string\"\n    ) {\n      throw new Error(\n        `${errorPrefix} Option \"sessionCookieValue\" needs to be a string.`\n      );\n    }\n\n    if (\n      userDefinedOptions.userAgent &&\n      typeof userDefinedOptions.userAgent !== \"string\"\n    ) {\n      throw new Error(\n        `${errorPrefix} Option \"userAgent\" needs to be a string.`\n      );\n    }\n\n    if (\n      userDefinedOptions.keepAlive !== undefined &&\n      typeof userDefinedOptions.keepAlive !== \"boolean\"\n    ) {\n      throw new Error(\n        `${errorPrefix} Option \"keepAlive\" needs to be a boolean.`\n      );\n    }\n\n    if (\n      userDefinedOptions.timeout !== undefined &&\n      typeof userDefinedOptions.timeout !== \"number\"\n    ) {\n      throw new Error(`${errorPrefix} Option \"timeout\" needs to be a number.`);\n    }\n\n    if (\n      userDefinedOptions.headless !== undefined &&\n      typeof userDefinedOptions.headless !== \"boolean\"\n    ) {\n      throw new Error(\n        `${errorPrefix} Option \"headless\" needs to be a boolean.`\n      );\n    }\n\n    if (\n      userDefinedOptions.executablePath !== undefined &&\n      typeof userDefinedOptions.executablePath !== \"string\"\n    ) {\n      throw new Error(\n        `${errorPrefix} Option \"executablePath\" needs to be a string.`\n      );\n    }\n\n    if (\n      userDefinedOptions.treeKill !== undefined &&\n      typeof userDefinedOptions.treeKill !== \"boolean\"\n    ) {\n      throw new Error(\n        `${errorPrefix} Option \"treeKill\" needs to be a boolean.`\n      );\n    }\n\n    this.options = Object.assign(this.options, userDefinedOptions);\n  }\n\n  /**\n   * Method to load Puppeteer in memory so we can re-use the browser instance.\n   */\n  public setup = async () => {\n    const logSection = \"setup\";\n\n    try {\n      if (!this.options.executablePath) {\n        this.options.executablePath = await chromium.executablePath;\n      }\n      statusLog(\n        logSection,\n        `Launching puppeteer in the ${\n          this.options.headless ? \"background\" : \"foreground\"\n        }...`\n      );\n      this.browser = await puppeteer.launch({\n        headless: this.options.headless,\n        executablePath: this.options.executablePath,\n        defaultViewport: this.options.defaultViewport,\n        args: [\n          ...chromium.args,\n          // this.options.headless ? \"---single-process\" : \"---start-maximized\",\n          // \"--no-sandbox\",\n          // \"--disable-gpu\",\n          // \"--disable-setuid-sandbox\",\n          // \"--proxy-server='direct://\",\n          // \"--proxy-bypass-list=*\",\n          // \"--disable-dev-shm-usage\",\n          // \"--disable-extensions\",\n          // \"--disable-accelerated-2d-canvas\",\n          // \"--disable-features=site-per-process\",\n          // \"--enable-features=NetworkService\",\n          // \"--allow-running-insecure-content\",\n          // \"--enable-automation\",\n          // \"--disable-background-timer-throttling\",\n          // \"--disable-backgrounding-occluded-windows\",\n          // \"--disable-renderer-backgrounding\",\n          // \"--disable-web-security\",\n          // \"--autoplay-policy=user-gesture-required\",\n          // \"--disable-background-networking\",\n          // \"--disable-breakpad\",\n          // \"--disable-client-side-phishing-detection\",\n          // \"--disable-component-update\",\n          // \"--disable-default-apps\",\n          // \"--disable-domain-reliability\",\n          // \"--disable-features=AudioServiceOutOfProcess\",\n          // \"--disable-hang-monitor\",\n          // \"--disable-ipc-flooding-protection\",\n          // \"--disable-notifications\",\n          // \"--disable-offer-store-unmasked-wallet-cards\",\n          // \"--disable-popup-blocking\",\n          // \"--disable-print-preview\",\n          // \"--disable-prompt-on-repost\",\n          // \"--disable-speech-api\",\n          // \"--disable-sync\",\n          // \"--disk-cache-size=33554432\",\n          // \"--hide-scrollbars\",\n          // \"--ignore-gpu-blacklist\",\n          // \"--metrics-recording-only\",\n          // \"--mute-audio\",\n          // \"--no-default-browser-check\",\n          // \"--no-first-run\",\n          // \"--no-pings\",\n          // \"--no-zygote\",\n          // \"--password-store=basic\",\n          // \"--use-gl=egl\",\n          // \"--use-mock-keychain\",\n          \"--lang=ko-KR,ko\",\n          \"--accept-lang=ko-KR\",\n        ],\n        timeout: this.options.timeout,\n      });\n\n      this.launched = true;\n      statusLog(logSection, \"Puppeteer launched!\");\n\n      await this.checkIfLoggedIn();\n\n      statusLog(logSection, \"Done!\");\n    } catch (err) {\n      // Kill Puppeteer\n      await this.close();\n\n      statusLog(logSection, \"An error occurred during setup.\");\n\n      throw err;\n    }\n  };\n\n  public isPuppeteerLoaded = async () => {\n    return this.launched;\n  };\n\n  /**\n   * Create a Puppeteer page with some extra settings to speed up the crawling process.\n   */\n  private createPage = async (): Promise<Page> => {\n    const logSection = \"setup page\";\n\n    if (!this.browser) {\n      throw new Error(\"Browser not set.\");\n    }\n\n    // Important: Do not block \"stylesheet\", makes the crawler not work for LinkedIn\n    const blockedResources = [\n      \"media\",\n      \"font\",\n      \"texttrack\",\n      \"object\",\n      \"beacon\",\n      \"csp_report\",\n      \"csp\",\n      \"imageset\",\n    ]; // not blocking image since we want profile pics\n\n    try {\n      let page = await this.browser.newPage();\n      // Use already open page\n      // This makes sure we don't have an extra open tab consuming memory\n      if (page && (await this.browser.pages()).length > 1) {\n        const firstPage = (await this.browser.pages())[0];\n        await firstPage.close();\n      } else if (!page) {\n        page = (await this.browser.pages())[0];\n      }\n      // Method to create a faster Page\n      // From: https://github.com/shirshak55/scrapper-tools/blob/master/src/fastPage/index.ts#L113\n      const session = await page.target().createCDPSession();\n      await page.setBypassCSP(true);\n      await session.send(\"Page.enable\");\n      await session.send(\"Page.setWebLifecycleState\", {\n        state: \"active\",\n      });\n\n      statusLog(\n        logSection,\n        `Blocking the following resources: ${blockedResources.join(\", \")}`\n      );\n\n      // A list of hostnames that are trackers\n      // By blocking those requests we can speed up the crawling\n      // This is kinda what a normal adblocker does, but really simple\n      const blockedHosts = this.getBlockedHosts();\n      const blockedResourcesByHost = [\"script\", \"xhr\", \"fetch\", \"document\"];\n\n      statusLog(\n        logSection,\n        `Should block scripts from ${\n          Object.keys(blockedHosts).length\n        } unwanted hosts to speed up the crawling.`\n      );\n\n      // Block loading of resources, like images and css, we dont need that\n      await page.setRequestInterception(true);\n\n      page.on(\"request\", (req) => {\n        if (blockedResources.includes(req.resourceType())) {\n          return req.abort();\n        }\n\n        const hostname = getHostname(req.url());\n\n        // Block all script requests from certain host names\n        if (\n          (blockedResourcesByHost.includes(req.resourceType()) &&\n            hostname &&\n            blockedHosts[hostname] === true) ||\n          req.url() === \"https://www.linkedin.com/li/track\" ||\n          req\n            .url()\n            .includes(\n              \"https://www.linkedin.com/realtime/realtimeFrontendClientConnectivityTracking\"\n            ) ||\n          req.url().includes(\"https://www.linkedin.com/security/csp\")\n        ) {\n          return req.abort();\n        }\n\n        return req.continue();\n      });\n\n      await page.setUserAgent(this.options.userAgent);\n      await page.setViewport({\n        width: 1200,\n        height: 720,\n      });\n\n      await page.setCookie({\n        name: \"li_at\",\n        value: this.options.sessionCookieValue,\n        domain: \".www.linkedin.com\",\n      });\n\n      statusLog(logSection, \"Done!\");\n\n      return page;\n    } catch (err) {\n      // Kill Puppeteer\n      await this.close();\n\n      statusLog(logSection, \"An error occurred during page setup.\");\n      statusLog(logSection, err.message);\n\n      throw err;\n    }\n  };\n\n  /**\n   * Method to block know hosts that have some kind of tracking.\n   * By blocking those hosts we speed up the crawling.\n   *\n   * More info: http://winhelp2002.mvps.org/hosts.htm\n   */\n  private getBlockedHosts = (): object => {\n    const blockedHostsArray = blockedHostsList.split(\"\\n\");\n\n    let blockedHostsObject = blockedHostsArray.reduce((prev, curr) => {\n      const frags = curr.split(\" \");\n\n      if (frags.length > 1 && frags[0] === \"0.0.0.0\") {\n        prev[frags[1].trim()] = true;\n      }\n\n      return prev;\n    }, {});\n\n    blockedHostsObject = {\n      ...blockedHostsObject,\n      \"static.chartbeat.com\": true,\n      \"scdn.cxense.com\": true,\n      \"api.cxense.com\": true,\n      \"www.googletagmanager.com\": true,\n      \"connect.facebook.net\": true,\n      \"platform.twitter.com\": true,\n      \"tags.tiqcdn.com\": true,\n      \"dev.visualwebsiteoptimizer.com\": true,\n      \"smartlock.google.com\": true,\n      \"cdn.embedly.com\": true,\n      \"www.pagespeed-mod.com\": true,\n      \"ssl.google-analytics.com\": true,\n      \"radar.cedexis.com\": true,\n      \"sb.scorecardresearch.com\": true,\n    };\n\n    return blockedHostsObject;\n  };\n\n  /**\n   * Method to complete kill any Puppeteer process still active.\n   * Freeing up memory.\n   */\n  public close = (page?: Page): Promise<void> => {\n    return new Promise(async (resolve, reject) => {\n      const loggerPrefix = \"close\";\n      this.launched = false;\n      if (page) {\n        try {\n          await page.close();\n        } catch (err) {\n          reject(err);\n        }\n      }\n\n      if (this.browser) {\n        try {\n          statusLog(loggerPrefix, \"Closing browser...\");\n          await this.browser.close();\n\n          const browserProcessPid = this.browser.process()?.pid;\n\n          // Completely kill the browser process to prevent zombie processes\n          // https://docs.browserless.io/blog/2019/03/13/more-observations.html#tip-2-when-you-re-done-kill-it-with-fire\n          if (browserProcessPid) {\n            statusLog(\n              loggerPrefix,\n              `Killing browser process pid: ${browserProcessPid}...`\n            );\n\n            if (this.options.treeKill) {\n              treeKill(browserProcessPid, \"SIGKILL\", (err) => {\n                if (err) {\n                  return reject(\n                    `Failed to kill browser process pid: ${browserProcessPid}`\n                  );\n                }\n\n                statusLog(\n                  loggerPrefix,\n                  `Killed browser pid: ${browserProcessPid} Closed browser.`\n                );\n              });\n            }\n            resolve();\n          }\n        } catch (err) {\n          reject(err);\n        }\n      }\n\n      return resolve();\n    });\n  };\n\n  /**\n   * Simple method to check if the session is still active.\n   */\n  public checkIfLoggedIn = async () => {\n    const logSection = \"checkIfLoggedIn\";\n\n    const page = await this.createPage();\n\n    statusLog(logSection, \"Checking if we are still logged in...\");\n\n    // Go to the login page of LinkedIn\n    // If we do not get redirected and stay on /login, we are logged out\n    // If we get redirect to /feed, we are logged in\n    await page.goto(\"https://www.linkedin.com/login\", {\n      waitUntil: \"networkidle2\",\n      timeout: this.options.timeout,\n    });\n\n    const url = page.url();\n\n    const isLoggedIn = !url.endsWith(\"/login\");\n\n    await page.close();\n\n    if (isLoggedIn) {\n      statusLog(logSection, \"All good. We are still logged in.\");\n    } else {\n      const errorMessage =\n        'Bad news, we are not logged in! Your session seems to be expired. Use your browser to login again with your LinkedIn credentials and extract the \"li_at\" cookie value for the \"sessionCookieValue\" option.';\n      statusLog(logSection, errorMessage);\n      throw new SessionExpired(errorMessage);\n    }\n  };\n\n  /**\n   * Method to scrape a user profile.\n   */\n  public run = async (profileUrl: string) => {\n    const logSection = \"run\";\n\n    const scraperSessionId = new Date().getTime();\n\n    if (!this.browser) {\n      throw new Error(\"Browser is not set. Please run the setup method first.\");\n    }\n\n    if (!profileUrl) {\n      throw new Error(\"No profileUrl given.\");\n    }\n\n    if (!profileUrl.includes(\"linkedin.com/\")) {\n      throw new Error(\"The given URL to scrape is not a linkedin.com url.\");\n    }\n\n    try {\n      // Each run has it's own page\n      const page = await this.createPage();\n\n      statusLog(\n        logSection,\n        `Navigating to LinkedIn profile: ${profileUrl}`,\n        scraperSessionId\n      );\n\n      await page.goto(profileUrl, {\n        // Use \"networkidl2\" here and not \"domcontentloaded\".\n        // As with \"domcontentloaded\" some elements might not be loaded correctly, resulting in missing data.\n        waitUntil: \"domcontentloaded\",\n        timeout: this.options.timeout,\n      });\n      await page.waitForTimeout(3000);\n\n      await autoScroll(page);\n      await page.waitForTimeout(1500);\n\n      statusLog(logSection, \"Parsing profile data...\", scraperSessionId);\n\n      const rawUserProfileData: RawProfile = await page.evaluate(() => {\n        const profileSection = document.querySelector(\".pv-top-card\");\n\n        const url = window.location.href;\n\n        const fullNameElement = profileSection?.querySelector(\n          \".text-heading-xlarge.inline\"\n        );\n        const fullName = fullNameElement?.textContent || null;\n\n        const titleElement = profileSection?.querySelector(\n          \".text-body-medium.break-words\"\n        );\n        const title = titleElement?.textContent || null;\n\n        const locationElement = profileSection?.querySelector(\n          \".text-body-small.inline.t-black--light.break-words\"\n        );\n        const location = locationElement?.textContent || null;\n\n        const photoElement =\n          profileSection?.querySelector(\n            \".pv-top-card-profile-picture__image.pv-top-card-profile-picture__image--show\"\n          ) || profileSection?.querySelector(\".profile-photo-edit__preview\");\n        const photo = photoElement?.getAttribute(\"src\") || null;\n\n        // const descriptionElement = document.querySelector(\".pv-about-section\"); // Is outside \"profileSection\"\n        let description =\n          document\n            .querySelector(\"#about\")\n            ?.nextElementSibling?.nextElementSibling?.querySelector(\n              'span[aria-hidden=\"true\"]'\n            )?.innerHTML || null;\n        if (description) {\n          description = description\n            .replace(/<!---->/gi, \"\")\n            .replace(/<br(\\/)?>/gi, \"\\n\");\n        }\n\n        return {\n          fullName,\n          title,\n          location,\n          photo,\n          description,\n          url,\n        } as RawProfile;\n      });\n\n      // Convert the raw data to clean data using our utils\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\n      const userProfile: Profile = {\n        ...rawUserProfileData,\n        fullName: getCleanText(rawUserProfileData.fullName),\n        title: getCleanText(rawUserProfileData.title),\n        location: rawUserProfileData.location\n          ? getLocationFromText(rawUserProfileData.location)\n          : null,\n        description: getCleanText(rawUserProfileData.description),\n      };\n\n      statusLog(logSection, `Parsing experiences data...`, scraperSessionId);\n\n      const rawExperiencesData = await page.evaluate(() => {\n        const experiences = document\n          .querySelector(\"#experience\")\n          ?.nextElementSibling?.nextElementSibling?.querySelectorAll(\n            \".pvs-entity\"\n          );\n        let result: RawExperience[] = [];\n\n        // Using a for loop so we can use await inside of it\n        if (experiences) {\n          experiences.forEach((node) => {\n            let title,\n              employmentType,\n              company,\n              description,\n              startDate,\n              endDate,\n              endDateIsPresent,\n              location;\n            let data: Element | NodeListOf<Element> | null =\n              node.querySelectorAll(\n                'div:nth-child(1) div:first-child span[aria-hidden=\"true\"]'\n              );\n            if (data.length >= 3) {\n              // software engineer\n              title = data.item(0).textContent;\n              // company, employment type\n              let temp = data.item(1).textContent;\n              company = temp?.split(\" · \")?.[0];\n              employmentType = temp?.split(\" · \")?.[1];\n              // date\n              temp = data.item(2).textContent;\n              const startDatePart = temp?.split(\" - \")[0] || null;\n              startDate = startDatePart?.trim() || null;\n\n              const endDatePart =\n                temp?.split(\" - \")[1]?.split(\" · \")[0] || null;\n              endDateIsPresent =\n                endDatePart?.trim().toLowerCase().includes(\"present\") ||\n                endDatePart?.trim() === \"현재\" ||\n                false;\n              endDate =\n                endDatePart && !endDateIsPresent\n                  ? endDatePart.trim()\n                  : \"Present\";\n              if (data.length === 4) {\n                // location\n                location = data.item(3).textContent;\n              }\n            }\n            data = node.querySelector(\n              'div:nth-child(1) div:first-child span[aria-hidden=\"true\"]'\n            );\n            if (data) {\n              description = data.innerHTML\n                .replace(/<!---->/gi, \"\")\n                .replace(/<br(\\/)?>/gi, \"\\n\");\n            }\n            result.push({\n              title,\n              company,\n              employmentType,\n              location,\n              startDate,\n              endDate,\n              endDateIsPresent,\n              description,\n            });\n          });\n        }\n\n        return result;\n      });\n      /*\n      const rawExperiencesData: RawExperience[] = await page.$$eval(\n        \"#experience-section ul > .ember-view, #experience-section .pv-entity__position-group-role-item-fading-timeline, #experience-section .pv-entity__position-group-role-item\",\n        (nodes) => {\n          let data: RawExperience[] = [];\n          let currentCompanySummary: object = {};\n\n          // Using a for loop so we can use await inside of it\n          for (const node of nodes) {\n            let title,\n              employmentType,\n              company,\n              description,\n              startDate,\n              endDate,\n              dateRangeText,\n              endDateIsPresent,\n              location;\n            if (\n              node.querySelector(\".pv-entity__company-summary-info\") != null\n            ) {\n              const companyElement = node.querySelector(\n                \".pv-entity__company-summary-info span:nth-child(2)\"\n              );\n              currentCompanySummary[\"company_name\"] =\n                companyElement?.textContent || null;\n\n              const descriptionElement = node.querySelector(\n                \".pv-entity__description\"\n              );\n              currentCompanySummary[\"\"] =\n                descriptionElement?.textContent || null;\n\n              continue;\n            }\n            if (\n              node.querySelector(\n                '[data-control-name=\"background_details_company\"]'\n              ) != null\n            ) {\n              currentCompanySummary = {};\n            }\n            if (Object.keys(currentCompanySummary).length !== 0) {\n              const titleElement = node.querySelector(\"h3 span:nth-child(2)\");\n              title = titleElement?.textContent || null;\n\n              const employmentTypeElement = node.querySelector(\"h4\");\n              employmentType = employmentTypeElement?.textContent || null;\n\n              company = currentCompanySummary[\"company_name\"];\n            } else {\n              const titleElement = node.querySelector(\"h3\");\n              title = titleElement?.textContent || null;\n\n              const employmentTypeElement = node.querySelector(\n                \"span.pv-entity__secondary-title\"\n              );\n              employmentType = employmentTypeElement?.textContent || null;\n\n              const companyElement = node.querySelector(\n                \".pv-entity__secondary-title\"\n              );\n              const companyElementClean =\n                companyElement && companyElement?.querySelector(\"span\")\n                  ? companyElement?.removeChild(\n                      companyElement.querySelector(\"span\") as Node\n                    ) && companyElement\n                  : companyElement || null;\n              company = companyElementClean?.textContent || null;\n            }\n\n            const descriptionElement = node.querySelector(\n              \".pv-entity__description\"\n            );\n            description = descriptionElement?.textContent || null;\n\n            const dateRangeElement = node.querySelector(\n              \".pv-entity__date-range span:nth-child(2)\"\n            );\n            dateRangeText = dateRangeElement?.textContent || null;\n\n            const startDatePart = dateRangeText?.split(\"–\")[0] || null;\n            startDate = startDatePart?.trim() || null;\n\n            const endDatePart = dateRangeText?.split(\"–\")[1] || null;\n            endDateIsPresent =\n              endDatePart?.trim().toLowerCase() === \"present\" || false;\n            endDate =\n              endDatePart && !endDateIsPresent ? endDatePart.trim() : \"Present\";\n\n            const locationElement = node.querySelector(\n              \".pv-entity__location span:nth-child(2)\"\n            );\n            location = locationElement?.textContent || null;\n\n            data.push({\n              title,\n              company,\n              employmentType,\n              location,\n              startDate,\n              endDate,\n              endDateIsPresent,\n              description,\n            });\n          }\n\n          return data;\n        }\n      );*/\n\n      // Convert the raw data to clean data using our utils\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\n      const experiences: Experience[] = rawExperiencesData.map(\n        (rawExperience) => {\n          const startDate = formatDate(rawExperience.startDate);\n          const endDate = formatDate(rawExperience.endDate) || null;\n          const endDateIsPresent = rawExperience.endDateIsPresent;\n\n          const durationInDaysWithEndDate =\n            startDate && endDate && !endDateIsPresent\n              ? getDurationInDays(startDate, endDate)\n              : null;\n          const durationInDaysForPresentDate =\n            endDateIsPresent && startDate\n              ? getDurationInDays(startDate, new Date())\n              : null;\n          const durationInDays = endDateIsPresent\n            ? durationInDaysForPresentDate\n            : durationInDaysWithEndDate;\n\n          let cleanedEmploymentType = getCleanText(\n            rawExperience.employmentType\n          );\n          if (\n            cleanedEmploymentType &&\n            ![\n              \"Full-time\",\n              \"Part-time\",\n              \"Self-employed\",\n              \"Freelance\",\n              \"Contract\",\n              \"Seasonal\",\n              \"Internship\",\n              \"Apprenticeship\",\n              \"인턴\",\n              \"정규직\",\n              \"계약직\",\n              \"프리랜서\",\n              \"자영업\",\n              \"파트타임\",\n              \"시즌제\",\n            ].includes(cleanedEmploymentType)\n          ) {\n            cleanedEmploymentType = null;\n          }\n          return {\n            ...rawExperience,\n            title: getCleanText(rawExperience.title),\n            company: getCleanText(rawExperience.company),\n            employmentType: cleanedEmploymentType,\n            location: rawExperience?.location\n              ? getLocationFromText(rawExperience.location)\n              : null,\n            startDate,\n            endDate,\n            endDateIsPresent,\n            durationInDays,\n            description: getCleanText(rawExperience.description),\n          };\n        }\n      );\n\n      statusLog(logSection, `Parsing certification data...`, scraperSessionId);\n\n      const rawCertificationData: RawCertification[] = await page.evaluate(\n        () => {\n          const certifications = document\n            .querySelector(\"#licenses_and_certifications\")\n            ?.nextElementSibling?.nextElementSibling?.querySelectorAll(\n              \".pvs-entity\"\n            );\n\n          // Note: the $$eval context is the browser context.\n          // So custom methods you define in this file are not available within this $$eval.\n          let result: RawCertification[] = [];\n          if (certifications) {\n            certifications.forEach((node) => {\n              let name, issuingOrganization, issueDate, expirationDate;\n              let data: Element | NodeListOf<Element> | null =\n                node.querySelectorAll(\n                  'div:nth-child(1) div:first-child span[aria-hidden=\"true\"]'\n                );\n              if (data.length >= 3) {\n                // certification name\n                name = data.item(0).textContent;\n                // issuing organization\n                issuingOrganization = data.item(1).textContent;\n                // date\n                let temp = data\n                  .item(2)\n                  .textContent?.replace(/issued /gi, \"\")\n                  .replace(/발행일: /gi, \"\");\n                if (\n                  temp?.includes(\" · No Expiration Date\") ||\n                  temp?.includes(\"\")\n                ) {\n                  const startDatePart = temp\n                    .replace(\" · No Expiration Date\", \"\")\n                    .replace(\" · 만료일 없음\", \"\");\n                  issueDate = startDatePart?.trim() || null;\n                  expirationDate = null;\n                } else {\n                  const startDatePart = temp?.split(\" - \")[0];\n                  issueDate = startDatePart?.trim() || null;\n\n                  const endDatePart =\n                    temp?.split(\" - \")[1]?.split(\" · \")[0] || null;\n                  expirationDate = endDatePart?.trim();\n                }\n              }\n              result.push({\n                name,\n                issueDate,\n                issuingOrganization,\n                expirationDate,\n              });\n            });\n          }\n\n          return result;\n        }\n      );\n\n      // Convert the raw data to clean data using our utils\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\n      const certifications: Certification[] = rawCertificationData.map(\n        (rawCertification) => {\n          return {\n            ...rawCertification,\n            name: getCleanText(rawCertification.name),\n            issuingOrganization: getCleanText(\n              rawCertification.issuingOrganization\n            ),\n            issueDate: formatDate(rawCertification.issueDate),\n            expirationDate: formatDate(rawCertification.expirationDate),\n          };\n        }\n      );\n\n      statusLog(logSection, `Parsing award data...`, scraperSessionId);\n\n      const rawAwardsData: Award[] = await page.evaluate(() => {\n        const awards = document\n          .querySelector(\"#honors_and_awards\")\n          ?.nextElementSibling?.nextElementSibling?.querySelectorAll(\n            \".pvs-entity\"\n          );\n\n        // Note: the $$eval context is the browser context.\n        // So custom methods you define in this file are not available within this $$eval.\n        let result: Award[] = [];\n        if (awards) {\n          awards.forEach((node) => {\n            let name, issuingOrganization, issueDate, description;\n            let data: Element | NodeListOf<Element> | null =\n              node.querySelectorAll(\n                'div:nth-child(1) div:first-child span[aria-hidden=\"true\"]'\n              );\n            if (data.length >= 1) {\n              // certification name\n              name = data.item(0).textContent;\n              if (data.length >= 2) {\n                let temp = data.item(1).textContent;\n                if (temp?.includes(\"Issued by\") || temp?.includes(\"발행: \")) {\n                  // issuing organization\n                  issuingOrganization = temp\n                    .replace(/Issued by /gi, \"\")\n                    .replace(/발행: /gi, \"\");\n                  if (issuingOrganization.includes(\" · \")) {\n                    let parse = issuingOrganization.split(\" · \");\n                    issuingOrganization = parse[0];\n                    issueDate = parse[1];\n                  }\n                }\n              }\n              try {\n                data = node.querySelector(\n                  'div:nth-child(1) div:nth-child(1) .pvs-list__outer-container .inline-show-more-text span[aria-hidden=\"true\"]'\n                );\n                if (data) {\n                  description = data.innerHTML\n                    .replace(/<!---->/gi, \"\")\n                    .replace(/<br(\\/)?>/gi, \"\\n\");\n                }\n              } catch {}\n            }\n            result.push({\n              name,\n              issueDate,\n              issuingOrganization,\n              description,\n            });\n          });\n        }\n\n        return result;\n      });\n\n      // Convert the raw data to clean data using our utils\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\n      const awards: Award[] = rawAwardsData.map((rawAwards) => {\n        return {\n          ...rawAwards,\n          name: getCleanText(rawAwards.name),\n          issuingOrganization: getCleanText(rawAwards.issuingOrganization),\n          issueDate: formatDate(rawAwards.issueDate),\n          description: getCleanText(rawAwards.description),\n        };\n      });\n\n      statusLog(logSection, `Parsing education data...`, scraperSessionId);\n\n      const rawEducationData: RawEducation[] = await page.evaluate(() => {\n        const educations = document\n          .querySelector(\"#education\")\n          ?.nextElementSibling?.nextElementSibling?.querySelectorAll(\n            \".pvs-entity\"\n          );\n\n        // Note: the $$eval context is the browser context.\n        // So custom methods you define in this file are not available within this $$eval.\n        let result: RawEducation[] = [];\n        for (let index = 0; index < (educations?.length || 0); index++) {\n          const node = educations!.item(index);\n\n          let data: Element | NodeListOf<Element> | null =\n            node.querySelectorAll(\n              'div:nth-child(1) div:first-child span[aria-hidden=\"true\"]'\n            );\n          let tempElement,\n            degreeName,\n            fieldOfStudy,\n            startDate,\n            endDate,\n            endDateIsPresent,\n            description,\n            schoolName;\n          if (data.length >= 1) {\n            // school name\n            schoolName = data.item(0).textContent;\n            // degree, major\n            if (data.length >= 2) {\n              tempElement = data.item(1).textContent;\n              if (tempElement.includes(\"20\") || tempElement.includes(\"19\")) {\n                // date\n                const startDatePart = tempElement?.split(\" - \")[0] || null;\n                startDate = startDatePart?.trim() || null;\n\n                const endDatePart =\n                  tempElement?.split(\" - \")[1]?.split(\" · \")[0] || null;\n                endDateIsPresent =\n                  endDatePart?.trim().toLowerCase() === \"present\" ||\n                  endDatePart?.trim().toLowerCase() === \"현재\" ||\n                  false;\n                endDate =\n                  endDatePart && !endDateIsPresent\n                    ? endDatePart.trim()\n                    : \"Present\";\n              } else {\n                // field\n                const regex =\n                  /(.*)([[전문]?학사|[전문]?석사|박사|Bachelor's degree|Master's degree|PhD|Ph.D|Doctor's degree])/i.exec(\n                    tempElement\n                  );\n                if (!regex) {\n                  fieldOfStudy = tempElement;\n                } else {\n                  fieldOfStudy = regex[1];\n                  degreeName = regex[2];\n                }\n                if (data.length >= 3) {\n                  tempElement = data.item(2).textContent;\n                  // date\n                  const startDatePart = tempElement?.split(\" - \")[0] || null;\n                  startDate = startDatePart?.trim() || null;\n\n                  const endDatePart =\n                    tempElement?.split(\" - \")[1]?.split(\" · \")[0] || null;\n                  endDateIsPresent =\n                    endDatePart?.trim().toLowerCase() === \"present\" ||\n                    endDatePart?.trim().toLowerCase() === \"현재\" ||\n                    false;\n                  endDate =\n                    endDatePart && !endDateIsPresent\n                      ? endDatePart.trim()\n                      : \"Present\";\n                }\n              }\n            }\n          }\n          try {\n            data = node.querySelector(\n              'div:nth-child(1) div:nth-child(1) span[aria-hidden=\"true\"]'\n            );\n            if (data) {\n              description = data.innerHTML\n                .replace(/<!---->/gi, \"\")\n                .replace(/<br(\\/)?>/gi, \"\\n\");\n            }\n          } catch {}\n\n          result.push({\n            schoolName,\n            degreeName,\n            fieldOfStudy,\n            startDate,\n            endDate,\n            description,\n          });\n        }\n\n        return result;\n      });\n\n      // Convert the raw data to clean data using our utils\n      // So we don't have to inject our util methods inside the browser context, which is too damn difficult using TypeScript\n      const education: Education[] = rawEducationData.map((rawEducation) => {\n        const startDate = formatDate(rawEducation.startDate);\n        const endDate = formatDate(rawEducation.endDate);\n\n        return {\n          ...rawEducation,\n          schoolName: getCleanText(rawEducation.schoolName),\n          degreeName: getCleanText(rawEducation.degreeName),\n          fieldOfStudy: getCleanText(rawEducation.fieldOfStudy),\n          startDate,\n          endDate,\n          durationInDays: getDurationInDays(startDate, endDate),\n        };\n      });\n\n      statusLog(\n        logSection,\n        `Parsing language accomplishments data...`,\n        scraperSessionId\n      );\n\n      const rawLanguageAccomplishments: RawLanguageAccomplishments[] =\n        await page.evaluate(() => {\n          const languages = document\n            .querySelector(\"#languages\")\n            ?.nextElementSibling?.nextElementSibling?.querySelectorAll(\n              \".pvs-entity\"\n            );\n\n          // Note: the $$eval context is the browser context.\n          // So custom methods you define in this file are not available within this $$eval.\n          let result: RawLanguageAccomplishments[] = [];\n          for (let index = 0; index < (languages?.length || 0); index++) {\n            const node = languages!.item(index);\n\n            let data: Element | NodeListOf<Element> | null =\n              node.querySelectorAll(\n                'div:nth-child(1) div:first-child span[aria-hidden=\"true\"]'\n              );\n            let language, proficiency;\n            if (data.length >= 1) {\n              // language name\n              language = data.item(0).textContent;\n              if (data.length >= 2) {\n                proficiency = data.item(1).textContent;\n              }\n            }\n\n            result.push({\n              language,\n              proficiency,\n            });\n          }\n\n          return result;\n        });\n\n      const languageAccomplishments: LanguageAccomplishments[] =\n        rawLanguageAccomplishments.map((languageAccomplishment) => {\n          return {\n            ...languageAccomplishment,\n            language: getCleanText(languageAccomplishment.language),\n            proficiency: getCleanText(languageAccomplishment.proficiency),\n          };\n        });\n\n      statusLog(\n        logSection,\n        `Parsing project accomplishments data...`,\n        scraperSessionId\n      );\n\n      const rawProjectAccomplishments: RawProjectAccomplishments[] =\n        await page.evaluate(() => {\n          const projects = document\n            .querySelector(\"#projects\")\n            ?.nextElementSibling?.nextElementSibling?.querySelectorAll(\n              \".pvs-entity\"\n            );\n\n          // Note: the $$eval context is the browser context.\n          // So custom methods you define in this file are not available within this $$eval.\n          let result: RawProjectAccomplishments[] = [];\n          for (let index = 0; index < (projects?.length || 0); index++) {\n            const node = projects!.item(index);\n\n            let data: Element | NodeListOf<Element> | null =\n              node.querySelectorAll(\n                'div:nth-child(1) div:first-child span[aria-hidden=\"true\"]'\n              );\n            let name, startDate, endDate, endDateIsPresent, description;\n            if (data.length >= 1) {\n              // language name\n              name = data.item(0).textContent;\n              if (data.length >= 2) {\n                let tempElement = data.item(1).textContent;\n                if (\n                  tempElement?.includes(\"20\") ||\n                  tempElement?.includes(\"19\")\n                ) {\n                  // date\n                  const startDatePart = tempElement.split(\" - \")[0] || null;\n                  startDate = startDatePart?.trim() || null;\n\n                  const endDatePart =\n                    tempElement.split(\" - \")[1]?.split(\" · \")[0] || null;\n                  endDateIsPresent =\n                    endDatePart?.trim().toLowerCase() === \"present\" ||\n                    endDatePart?.trim().toLowerCase() === \"현재\" ||\n                    false;\n                  endDate =\n                    endDatePart && !endDateIsPresent\n                      ? endDatePart.trim()\n                      : \"Present\";\n                }\n              }\n            }\n            try {\n              data = node.querySelector(\n                'div:nth-child(1) div:nth-child(1) span[aria-hidden=\"true\"]'\n              );\n              if (data) {\n                description = data.innerHTML\n                  .replace(/<!---->/gi, \"\")\n                  .replace(/<br(\\/)?>/gi, \"\\n\");\n              }\n            } catch {}\n\n            result.push({\n              name,\n              startDate,\n              endDate,\n              endDateIsPresent,\n              description,\n            });\n          }\n\n          return result;\n        });\n\n      const projectAccomplishments: ProjectAccomplishments[] =\n        rawProjectAccomplishments.map((projectAccomplishment) => {\n          return {\n            ...projectAccomplishment,\n            name: getCleanText(projectAccomplishment.name),\n            description: getCleanText(projectAccomplishment.description),\n          };\n        });\n\n      statusLog(logSection, `Parsing skills data...`, scraperSessionId);\n      const seeMoreSelector = await page.evaluate(() => {\n        try {\n          const seeMore = document\n            .querySelector(\"#skills\")\n            ?.nextElementSibling?.nextElementSibling?.querySelector(\n              \"div.pvs-list__footer-wrapper a.optional-action-target-wrapper\"\n            );\n          if (seeMore) {\n            // in case of see more\n            const skillsElement = document.querySelector(\"#skills\");\n            return `#${\n              skillsElement!.parentElement!.id\n            } .pvs-list__outer-container div.pvs-list__footer-wrapper a.optional-action-target-wrapper`;\n          } else {\n            return null;\n          }\n        } catch (error) {\n          return null;\n        }\n      });\n      let skills: Skill[];\n      if (seeMoreSelector) {\n        await Promise.all([\n          page.waitForNavigation({\n            timeout: this.options.timeout,\n            waitUntil: \"domcontentloaded\",\n          }),\n          page.click(seeMoreSelector),\n        ]);\n        await page.waitForTimeout(2000);\n        await autoScroll(page);\n        await page.waitForTimeout(500);\n        skills = await page.evaluate(() => {\n          let skills = document\n            .querySelector(\".pvs-list\")\n            ?.querySelectorAll(\n              `.pvs-entity a[data-field=\"skill_page_skill_topic\"] span[aria-hidden=\"true\"]`\n            );\n          // Note: the $$eval context is the browser context.\n          // So custom methods you define in this file are not available within this $$eval such as statusLog.\n\n          let result: Skill[] = [];\n          for (let index = 0; index < (skills?.length || 0); index++) {\n            result.push({\n              skillName: skills!.item(index)?.textContent?.trim() || null,\n              endorsementCount: 0,\n            } as Skill);\n          }\n          return result;\n        });\n      } else {\n        skills = await page.evaluate(() => {\n          let skills = document\n            .querySelector(\"#skills\")\n            ?.nextElementSibling?.nextElementSibling?.querySelectorAll(\n              `.pvs-entity a[data-field=\"skill_card_skill_topic\"] span[aria-hidden=\"true\"]`\n            );\n          // Note: the $$eval context is the browser context.\n          // So custom methods you define in this file are not available within this $$eval such as statusLog.\n\n          let result: Skill[] = [];\n          for (let index = 0; index < (skills?.length || 0); index++) {\n            result.push({\n              skillName: skills!.item(index)?.textContent?.trim() || null,\n              endorsementCount: 0,\n            } as Skill);\n          }\n          return result;\n        });\n      }\n\n      statusLog(\n        logSection,\n        `Done! Returned profile details for: ${profileUrl}`,\n        scraperSessionId\n      );\n\n      if (!this.options.keepAlive) {\n        statusLog(logSection, \"Not keeping the session alive.\");\n\n        await this.close(page);\n\n        statusLog(logSection, \"Done. Puppeteer is closed.\");\n      } else {\n        statusLog(logSection, \"Done. Puppeteer is being kept alive in memory.\");\n\n        // Only close the current page, we do not need it anymore\n        await page.close();\n      }\n\n      return {\n        userProfile,\n        experiences,\n        certifications,\n        education,\n        volunteerExperiences: [],\n        skills,\n        organizationAccomplishments: [],\n        languageAccomplishments,\n        projectAccomplishments,\n        awards,\n      };\n    } catch (err) {\n      // Kill Puppeteer\n      await this.close();\n\n      statusLog(logSection, \"An error occurred during a run.\");\n\n      // Throw the error up, allowing the user to handle this error himself.\n      throw err;\n    }\n  };\n}\n"]}